AC_INIT(configure.in)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(pptp,0.8.5)

AC_LANG_C
AC_PROG_CC
AM_PROG_LIBTOOL

AC_DEFINE(PPPD_VERSION,[],"PPPD version")
AC_DEFINE(KERNELVERSION,[],"kernel version")
AC_DEFINE_UNQUOTED(PLUGINVERSION,"$VERSION","Plugin version")

CFLAGS="${CFLAGS:=}"

dnl check linux headers
AC_MSG_CHECKING([for linux kernel herders])
if test -n "${KDIR}"; then
    if test -f ${KDIR}/include/linux/version.h; then 
	header=${KDIR}/include
    else
	AC_MSG_RESULT(not found)
	AC_MSG_ERROR(Could not find linux kernel headers)
    fi
else
    kernel=`uname -r`
    if test -f /usr/src/linux/include/linux/version.h; then
	header=/usr/src/linux/include
    elif test -f /lib/modules/${kernel}/build/include/linux/version.h; then 
	header=/lib/modules/${kernel}/build/include
    else
	AC_MSG_RESULT(not found)
	AC_MSG_ERROR(Could not find linux kernel headers)
    fi
fi
VERSION=$(cat ${header/include}Makefile | grep '^VERSION = ' | awk '{print $3}')
PATCHLEVEL=$(cat ${header/include}Makefile | grep '^PATCHLEVEL = ' | awk '{print $3}')
SUBLEVEL=$(cat ${header/include}Makefile | grep '^SUBLEVEL = ' | awk '{print $3}')
EXTRAVERSION=$(cat ${header/include}Makefile | grep '^EXTRAVERSION = ' | awk '{print $3}')
KERNELVERSION=$VERSION.$PATCHLEVEL.$SUBLEVEL$EXTRAVERSION
AC_MSG_RESULT(found ($KERNELVERSION at ${header/include}))
AC_DEFINE_UNQUOTED(KERNELVERSION,"$KERNELVERSION")

dnl check pppd headers
AC_MSG_CHECKING([for pppd headers])
if test -n "${PPPDIR}"; then
    if test -f ${PPPDIR}/pppd/pppd.h; then
	pppd=${PPPDIR}/pppd
    else
	AC_MSG_RESULT(not found)
	AC_MSG_ERROR(Could not find pppd headers)
    fi
else
    if test -f /usr/include/pppd/pppd.h; then
	pppd=/usr/include/pppd
    elif test -f /usr/local/include/pppd/pppd.h; then
	pppd=/usr/local/include/pppd
    else
	AC_MSG_RESULT(not found)
	AC_MSG_ERROR(Could not find pppd headers)
    fi
fi
pppd_ver=$(cat ${pppd}/patchlevel.h | grep 'VERSION' | awk '{gsub(/"/,"",$3);print $3}')
AC_MSG_RESULT(found ($pppd_ver at ${pppd}))
AC_DEFINE_UNQUOTED(PPPD_VERSION,"${pppd_ver}")

CFLAGS="${CFLAGS} -I. -I${header} -I${pppd}/.."

echo '==============================================================================='

echo 'Configuration chosen:'
echo    '   PPPD:              '${pppd_ver} at ${pppd}
echo    '   linux kernel :     '$KERNELVERSION at ${header/include}

AC_OUTPUT(Makefile src/Makefile)
 